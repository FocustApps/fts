# Fenrir Testing System - Environment Configuration
# Copy this file to .env and update with your actual values
# 
# ===========================================
# FTS Application Configuration
# ===========================================
# This section contains environment variables for the FTS (Fenrir Testing System) application
# Additional legacy configuration variables for the broader Fenrir project follow below

# Required if you are testing the username_password_sample.py
USERNAME=synthetic_user

RUN_CONFIG=synthetic_run_config

# Pipeline Configuration Variables
TARGET_ENVIRONMENT=synthetic_env

BROWSER=firefox
# TEST_TARGETS=tests/safecheck/api/test_synthetic.py
# REMOTE_DRIVER_URL=https://synthetic.remote.driver.url
CI_JOB_RUN=FALSE

AZURE_WIKI_TOKEN=synthetic_azure_wiki_token

# Azure DevOps Configuration
AZURE_DEVOPS_TOKEN=synthetic_azure_devops_token
AZURE_DEVOPS_BASE_URL=https://dev.azure.com/syntheticorg

# Azure Service Bus Configuration
AZURE_SUBSCRIPTION_ID=synthetic_subscription_id
SERVICEBUS_FULLY_QUALIFIED_NAMESPACE=synthetic.servicebus.windows.net
SERVICE_BUS_QUEUE_NAME=syntheticqueue

# Base Application Configuration
ENVIRONMENT=local
API_VERSION=v2
HTMX_VERSION=2.1.0
JQUERY_VERSION=4.0.0
BOOTSTRAP_VERSION=6.0.0

# Authentication Settings
AUTH_TOKEN_FILE_PATH=auth_token.txt
AUTH_ROTATION_INTERVAL_MINUTES=30
AUTH_EXTERNAL_SYNC_ENABLED=false
AUTH_EXTERNAL_SYNC_URL=

# Email Notification Settings
EMAIL_NOTIFICATION_ENABLED=false
EMAIL_RECIPIENT=synthetic_email_recipient@example.com
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=465
EMAIL_USER=synthetic.email.user@example.com
EMAIL_PASSWORD=synthetic_email_password
EMAIL_SUBJECT=Fenrir Auth Token

# Storage Settings for Authentication Tokens
STORAGE_ENABLED=false
STORAGE_PROVIDER_TYPE=local

# Local Storage Settings - Directory where token files will be stored
STORAGE_LOCAL_BASE_DIRECTORY=./data/tokens

# AWS S3 Storage Settings
STORAGE_AWS_BUCKET_NAME=fenrir-auth-tokens
STORAGE_AWS_PREFIX=tokens/
STORAGE_AWS_REGION=us-east-1
# AWS credentials (choose one method):
# Method 1: Environment variables (recommended for production)
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here
# Method 2: IAM roles (recommended for EC2/ECS) - no additional config needed
# Method 3: AWS CLI credentials file - no additional config needed

# Azure Blob Storage Settings
STORAGE_AZURE_CONTAINER_NAME=fenrir-auth-tokens
STORAGE_AZURE_PREFIX=tokens/
# Azure credentials (choose one method):
# Method 1: Connection string (simplest for development)
STORAGE_AZURE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=syntheticaccount;AccountKey=synthetickey;EndpointSuffix=core.windows.net
# Method 2: Account name and key
STORAGE_AZURE_ACCOUNT_NAME=syntheticstorageaccount
STORAGE_AZURE_ACCOUNT_KEY=synthetic_account_key

# Database Configuration
DATABASE_TYPE=postgresql
DB_HOST=localhost
DB_PORT=5432
POSTGRES_DB=synthetic_db
POSTGRES_USER=synthetic_db_user
POSTGRES_PASSWORD=synthetic_db_password
DB_SERVER_NAME=syntheticdbserver
DB_NAME=synthetic_db
DB_USERNAME=synthetic_db_user
DB_USER_PASSWORD=synthetic_db_password
DB_POOL_SIZE=10
DB_ECHO=true

# ===========================================
# Legacy Fenrir Project Configuration
# ===========================================
# The following variables are for the broader Fenrir testing framework
# and may not be needed for FTS application development

# Fenrir Email Configuration (Legacy - for backwards compatibility)
# Note: These are now configured in the Email Notification Settings section above

# Logging Configuration
LOG_LEVEL=debug

# Reporting Service Configuration
REPORT_NAME=synthetic_report.xml
SYSTEM_UNDER_TEST=Synthetic-System
REPORTING_DATABASE_TYPE=postgres
REPORTING_DB_SERVER_NAME=synthetic_reporting_db_server
REPORTING_DB_NAME=synthetic_reporting_db
REPORTING_DB_USERNAME=synthetic_reporting_user
REPORTING_DB_PASSWORD=synthetic_reporting_password
REPORTING_DB_POOL_SIZE=10
REPORTING_DB_ECHO=true

# AWS Configuration
ACCESS_KEY=synthetic_access_key
SECRET_KEY=synthetic_secret_key
AWS_REGION=us-west-2
AWS_S3_BUCKET_NAME=synthetic-bucket

SAFECHECK_DELETE_JOB_SEARCH_TEXT="Synthetic Automation"

# Slack Chat Webhook URL
CHAT_SERVICE=synthetic_chat
WEBHOOK_URL=https://hooks.slack.com/services/SYNTHETIC/WEBHOOK/URL
CHANNEL_NAME=synthetic_channel
SLACK_TOKEN=synthetic_slack_token

TIMETRACKER_ADMIN_EMAIL=synthetic_admin@example.com
TIMETRACKER_USER_EMAIL=synthetic_user@example.com

# QA sandbox
STRIPE_QA_SANDBOX_PUBLIC=synthetic_stripe_public
STRIPE_QA_SANDBOX_SECRET=synthetic_stripe_secret

# ===========================================
# Storage Configuration Examples & Documentation
# ===========================================

# Example 1: Local development with file system storage
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=local
# STORAGE_LOCAL_BASE_DIRECTORY=./data/tokens

# Example 2: Production with AWS S3
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=aws_s3
# STORAGE_AWS_BUCKET_NAME=prod-fenrir-tokens
# STORAGE_AWS_PREFIX=production/tokens/
# STORAGE_AWS_REGION=us-west-2

# Example 3: Production with Azure Blob Storage
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=azure_blob
# STORAGE_AZURE_CONTAINER_NAME=prod-tokens
# STORAGE_AZURE_PREFIX=production/tokens/

# Token File Structure:
# Local: ./data/tokens/user_email/timestamp_auth_token.txt
# Cloud: tokens/user_email/timestamp_auth_token.txt
# 
# Security Considerations:
# - Use environment variables or secure credential management for production
# - Ensure storage buckets/containers have appropriate access controls
# - Use managed identities in cloud environments when possible
# - Regularly clean up expired token files
