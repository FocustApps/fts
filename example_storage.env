# Fenrir Token Storage Configuration Examples
# 
# This file shows example configurations for different storage providers
# Copy the relevant section to your .env file and update the values

# =============================================================================
# STORAGE SYSTEM CONFIGURATION
# =============================================================================

# Enable or disable token storage (set to true to enable)
STORAGE_ENABLED=false

# Choose storage provider: "local", "aws_s3", or "azure_blob"
STORAGE_PROVIDER_TYPE=local

# =============================================================================
# LOCAL FILE SYSTEM STORAGE (provider_type = "local")
# =============================================================================

# Directory where token files will be stored
# Will create subdirectories per user email
STORAGE_LOCAL_BASE_DIRECTORY=./data/tokens

# =============================================================================
# AWS S3 STORAGE (provider_type = "aws_s3")
# =============================================================================

# S3 bucket name for storing tokens
STORAGE_AWS_BUCKET_NAME=fenrir-auth-tokens

# Prefix for organizing tokens in the bucket
STORAGE_AWS_PREFIX=tokens/

# AWS region
STORAGE_AWS_REGION=us-east-1

# AWS credentials can be provided via:
# 1. Environment variables (recommended for production)
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here

# 2. IAM roles (recommended for EC2/ECS deployment)
# No additional configuration needed - uses instance profile

# 3. AWS CLI credentials file
# No additional configuration needed - uses ~/.aws/credentials

# =============================================================================
# AZURE BLOB STORAGE (provider_type = "azure_blob")
# =============================================================================

# Azure storage container name for storing tokens
STORAGE_AZURE_CONTAINER_NAME=fenrir-auth-tokens

# Prefix for organizing tokens in the container
STORAGE_AZURE_PREFIX=tokens/

# Azure credentials - choose ONE of the following methods:

# Method 1: Connection string (simplest for development)
STORAGE_AZURE_CONNECTION_STRING="DefaultEndpointsProtocol=https;AccountName=youraccount;AccountKey=yourkey;EndpointSuffix=core.windows.net"

# Method 2: Account name and key
STORAGE_AZURE_ACCOUNT_NAME=yourstorageaccount
STORAGE_AZURE_ACCOUNT_KEY=your_account_key_here

# Method 3: SAS token (for limited access)
# Configure in the provider settings directly

# Method 4: Azure CLI/Managed Identity (for production)
# No additional configuration needed - uses DefaultAzureCredential

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Local development with file system storage
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=local
# STORAGE_LOCAL_BASE_DIRECTORY=./data/tokens

# Example 2: Production with AWS S3
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=aws_s3
# STORAGE_AWS_BUCKET_NAME=prod-fenrir-tokens
# STORAGE_AWS_PREFIX=production/tokens/
# STORAGE_AWS_REGION=us-west-2
# AWS_ACCESS_KEY_ID=AKIA...
# AWS_SECRET_ACCESS_KEY=...

# Example 3: Production with Azure Blob Storage
# STORAGE_ENABLED=true
# STORAGE_PROVIDER_TYPE=azure_blob
# STORAGE_AZURE_CONTAINER_NAME=prod-tokens
# STORAGE_AZURE_PREFIX=production/tokens/
# STORAGE_AZURE_CONNECTION_STRING="DefaultEndpointsProtocol=https;AccountName=..."

# =============================================================================
# TOKEN FILE STRUCTURE
# =============================================================================
# 
# When storage is enabled, token files are organized as follows:
# 
# Local Storage:
# ./data/tokens/
# ├── john_doe_example_com/
# │   ├── 20241213_143022_auth_token.txt
# │   └── 20241213_150145_auth_token.txt
# └── jane_smith_company_com/
#     └── 20241213_144533_auth_token.txt
# 
# Cloud Storage (S3/Azure):
# tokens/
# ├── john_doe_example_com/20241213_143022_auth_token.txt
# ├── john_doe_example_com/20241213_150145_auth_token.txt
# └── jane_smith_company_com/20241213_144533_auth_token.txt
# 
# Each token file contains:
# - The authentication token
# - User email
# - Generated timestamp
# - Expiration timestamp
# - Additional metadata

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================
# 
# 1. Use environment variables or secure credential management for production
# 2. Ensure storage buckets/containers have appropriate access controls
# 3. Consider token encryption for highly sensitive environments
# 4. Regularly clean up expired token files
# 5. Monitor storage access logs for suspicious activity
# 6. Use managed identities in cloud environments when possible